// ------------------------------------
// Breakpoints
// ------------------------------------

/*
rem-calc($size)
Convert px to rem.
$size - The px size
*/
@function rem-calc($size) {
    $rem-size: $size / 16;
    @return #{$rem-size}rem;
}

// Fallback if nothing is set in variables
$breakpoints: (
  small: 480,
  medium: 720,
  large: 960,
) !default;

@mixin breakpoint($label, $max:null) {
  @if map-has-key($breakpoints, $label) {
    $width: map-get($breakpoints, $label);
    @if $max != null {
      @media (max-width: rem-calc($width)) {
        @content;
      }
    }
    @else {
      @media (min-width: rem-calc($width)) {
        @content;
      }
    }
  }
  @elseif type-of($label) == 'number' {
    @if $max != null {
      @media screen and (max-width: rem-calc($label)) {
        @content;
      }
    }
    @else {
      @media screen and (min-width: rem-calc($label)) {
        @content;
      }
    }
  }
  @else {
    @warn "`#{$label} is not a valid key in `#{$breakpoints}`. ";
  }
}
// Hva gj√∏r denne?
@mixin bp($label, $max:null) {
  @if mixin-exists(breakpoint) {
    @include breakpoint($label, $max) {
      @content;
    }
  }
  @else {
    @warn "`#{$label}` is not a valid key in `$breakpoints`.";
  }
}
